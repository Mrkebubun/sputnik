"""migrate from mexbt-beta

Revision ID: 3896b72e307c
Revises: None
Create Date: 2014-04-02 16:22:13.481880

"""

# revision identifiers, used by Alembic.
revision = '3896b72e307c'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('totp', sa.String(), nullable=True),
    sa.Column('level', sa.Integer(), server_default='0', nullable=True),
    sa.PrimaryKeyConstraint('username')
    )
    op.create_table('journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('Deposit', 'Withdrawal', 'Transfer', 'Adjustment', 'Trade', 'Fee',
                              name='journal_types'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('permission_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('trade', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('deposit', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('withdraw', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('login', sa.Boolean(), server_default='true', nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('posting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=True),
    sa.Column('journal_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('quantity', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contracts.id'], ),
    sa.ForeignKeyConstraint(['journal_id'], ['journal.id'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('expiration', sa.DateTime(), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('support_tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nonce', sa.String(), nullable=True),
    sa.Column('foreign_key', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('Compliance', name='ticket_types'), nullable=True),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('foreign_key'),
    sa.UniqueConstraint('nonce')
    )
    context = op.get_context()
    if context.bind.dialect.name == 'postgresql':
        has_account_types = context.bind.execute(
                "select exists (select 1 from pg_type "
                "where typname='account_types')").scalar()
        if not has_account_types:
            op.execute("CREATE TYPE account_types AS ENUM ('Liability', 'Asset')")

    op.add_column(u'users', sa.Column('audit_secret', sa.String(), nullable=True))
    op.add_column(u'users', sa.Column('permission_group_id', sa.Integer(), server_default='1', nullable=True))
    op.add_column(u'users', sa.Column('type', sa.Enum('Liability', 'Asset', name='account_types'), server_default='Liability', nullable=False))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'users', 'type')
    op.drop_column(u'users', 'permission_group_id')
    op.drop_column(u'users', 'audit_secret')
    op.drop_table('support_tickets')
    op.drop_table('reset_tokens')
    op.drop_table('posting')
    op.drop_table('permission_groups')
    op.drop_table('journal')
    op.drop_table('admin_users')
    ### end Alembic commands ###
