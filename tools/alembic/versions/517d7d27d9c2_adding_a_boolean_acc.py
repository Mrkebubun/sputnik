"""adding a boolean accepted field to Orders

Revision ID: 517d7d27d9c2
Revises: e0881d53eb6
Create Date: 2013-07-22 18:22:32.643617

"""

# revision identifiers, used by Alembic.
revision = '517d7d27d9c2'
down_revision = 'e0881d53eb6'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table(u'tree')
    op.drop_table(u'futures_contract_info')
    op.drop_table(u'post_tags')
    op.drop_table(u'post')
    op.drop_table(u'user_info')
    op.drop_table(u'user')
    op.drop_table(u'addresses_info')
    op.drop_table(u'contract_info')
    op.drop_table(u'prediction_contract_info')
    op.drop_table(u'tag')
    op.add_column('orders', sa.Column('accepted', sa.Boolean(), server_default='false', nullable=False))
    op.alter_column('orders', u'is_cancelled',
               existing_type=sa.BOOLEAN(),
               nullable=False, server_default='false')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('orders', u'is_cancelled',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('orders', 'accepted')
    op.create_table(u'tag',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('tag_id_seq'::regclass)", nullable=False),
    sa.Column(u'name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'tag_pkey')
    )
    op.create_table(u'prediction_contract_info',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('prediction_contract_info_id_seq'::regclass)", nullable=False),
    sa.Column(u'key', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column(u'value', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'contract_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], [u'predictions.id'], name=u'prediction_contract_info_contract_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'prediction_contract_info_pkey')
    )
    op.create_table(u'post_tags',
    sa.Column(u'post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column(u'tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], [u'post.id'], name=u'post_tags_post_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], [u'tag.id'], name=u'post_tags_tag_id_fkey'),
    sa.PrimaryKeyConstraint()
    )
    op.create_table(u'user_info',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('user_info_id_seq'::regclass)", nullable=False),
    sa.Column(u'key', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column(u'value', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], name=u'user_info_user_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'user_info_pkey')
    )
    op.create_table(u'contract_info',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('contract_info_id_seq'::regclass)", nullable=False),
    sa.Column(u'key', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column(u'value', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'contract_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], [u'contracts.id'], name=u'contract_info_contract_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'contract_info_pkey')
    )
    op.create_table(u'addresses_info',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('addresses_info_id_seq'::regclass)", nullable=False),
    sa.Column(u'key', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column(u'value', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['address_id'], [u'addresses.id'], name=u'addresses_info_address_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'addresses_info_pkey')
    )
    op.create_table(u'user',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('user_id_seq'::regclass)", nullable=False),
    sa.Column(u'username', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column(u'email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint(u'id', name=u'user_pkey')
    )
    op.create_table(u'post',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('post_id_seq'::regclass)", nullable=False),
    sa.Column(u'title', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column(u'text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column(u'date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column(u'user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], name=u'post_user_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'post_pkey')
    )
    op.create_table(u'futures_contract_info',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('futures_contract_info_id_seq'::regclass)", nullable=False),
    sa.Column(u'key', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column(u'value', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'contract_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], [u'futures.id'], name=u'futures_contract_info_contract_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'futures_contract_info_pkey')
    )
    op.create_table(u'tree',
    sa.Column(u'id', sa.INTEGER(), server_default="nextval('tree_id_seq'::regclass)", nullable=False),
    sa.Column(u'name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column(u'parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], [u'tree.id'], name=u'tree_parent_id_fkey'),
    sa.PrimaryKeyConstraint(u'id', name=u'tree_pkey')
    )
    ### end Alembic commands ###
